name: Deploy

on:
  push:
    branches:
      - PM-1524-deploy-workflow
  workflow_dispatch:
    inputs:
      deployment_tag:
        description: "Enter the tag of the image to deploy (e.g. 0.2.0-64bfbb3)"
        required: true
        type: string

env:
  ECR_REPOSITORY_URL: 673156464838.dkr.ecr.us-west-2.amazonaws.com
  ECR_REPOSITORY_NAME: gpt-survey-summarizer
  APPLICATION_NAME: gpt-survey-summarizer 
  DEPLOYMENT_TAG: ${{ github.event.inputs.deployment_tag }}
  PLATFORM: staging
  NAMESPACE: governance

jobs:
  deploy:
    name: Build and Publish Docker Image
    runs-on: minafoundation-default-runners
    steps:

      - name: ‚öôÔ∏è  Set environment variables
        run: |
          echo "AWS_REGION=$AWS_REGION" >> $GITHUB_ENV
          echo "DEPLOYMENT_ROLE_NAME=$DEPLOYMENT_ROLE_NAME" >> $GITHUB_ENV
          echo "AWS_ROLE_DURATION_SECONDS=$AWS_ROLE_DURATION_SECONDS" >> $GITHUB_ENV

      - name: üîë Assume role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.DEPLOYMENT_ROLE_NAME }}
          role-session-name: ${{ env.DEPLOYMENT_ROLE_NAME }}
          role-duration-seconds: ${{ env.AWS_ROLE_DURATION_SECONDS }}

      - name: üÜô Update kubeconfig
        run: |
          aws eks update-kubeconfig --name $PLATFORM --region $AWS_REGION 1>/dev/null

      - name: üíø Set deployment image
        run: |
          kubectl set image deployment "*=$ECR_REPOSITORY_URL/$ECR_REPOSITORY_NAME:$DEPLOYMENT_TAG" -l app.kubernetes.io/name=$APPLICATION_NAME -n $NAMESPACE

      - name: ‚è±Ô∏è Wait for pods to be ready
        run: |
          kubectl wait --for='jsonpath={.status.conditions[?(@.type=="Ready")].status}=True' pods -l app.kubernetes.io/name=$APPLICATION_NAME -n $NAMESPACE
